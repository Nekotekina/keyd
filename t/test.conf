# TODO: Simplify and use mnemonic bindings.

[ids]

2fac:2ade

[global]

chord_timeout = 100
chord_hold_timeout = 200
overload_tap_timeout = 5

[main]

esc = clear()

# Full overloads
[**main]
meta = layer(mymeta+meta)
leftalt = layer(myalt+alt)
# Two separate ctrl-like layers
capslock = layer(capslock+ctrl)
ctrl = layer(c1+ctrl)

[main]
a+b = layer(c1+control)
j+k = **c
a+b+d = layer(shift)
1 = layer(layer1)
**2 = oneshot(customshift+shift)
**w = oneshot(customshift+shift)
e = oneshotm(shift, macro(t(on)))
p = layerm(shift, macro(o txt(n)))
**3 = layer(layer3+ctrl)
4 = toggle(test)
5 = layer(symbols)
**6 = overload(6l+ctrl, **esc)
**7 = overload(meta, oneshot(c1+control))
8 = timeout(overload(c1+control, a), 1, b)
**9 = A*M-C-S-x
1+2 = oneshot(test)
l = layer(test)
m = macro(C-h text(one))
**c = oneshot(c1+control)
s = layer(shift)
**o = overloadt(c1+control, a, 10)
apostrophe = overloadt2(c1+control, apostrophe, 10)
**semicolon = overloadt(shift, b, 10)
- = toggle(dvorak)
= = timeout(a, 300, b)
\ = ðŸ˜„
**leftbrace = togglem(c1+control, **macro(type(one)))
z = overload(c1+control, enter)
**/ = **z

[altgr]

a = a

[layout2]

a = c

[c1+control]

a = b

[mymeta+meta]

a = b

[6l+ctrl]

s = swap(tablayer)
o = overload(meta, macro(\\))
m = macro(text(mac))
e = macro(leftcontrol o+n leftcontrol+1)
b = macro(leftcontrol+n)
c = macro(leftcontrol n)
x = overload(meta, swap(shift))

[test2]

s = a
x = toggle(test2)

[test]

o = oneshot(o+ctrl)
a = b
b = toggle(test)
s = swap(test2)
c = clear()

[o+ctrl]

a = b
x = macro(m a c)

# Full wildcard remap
[**dvorak**]
x = o

[myalt+alt]
m = macro(C-x m)
7 = x
s = swapm(swapped1+meta, M-a)
**` = swap(tablayer)
1 = swapm(tablayer, tab)
**2 = swapm(tablayer2+ctrl, **tab)

[myalt+alt+control+shift]

h = left

[myalt+alt+control]

h = H

[swapped1+meta]

a = M-b
s = swap(swapped2)

[swapped2]

a = c

[symbols]

a = [
b = S-[

[tablayer2]

[tablayer]

` = 9
**tab = **S-x
a = b

[layer1]
h = 1

[layer3+ctrl]
h = 3
\ = macro(1 t(ðŸ˜„2))

[customshift+shift]

h = 1
**t = toggle(customshift+shift)
# Was b = a, it's very far from obvious that 'a' required Ctrl active
# Because normally, you'd expect the output to be what's written on the right
# Now C* expresses that it might be a Ctrl (could be ** to enable any mod)
**b = C*a
x = macro(o n)

[capslock+ctrl]
alt = layer(target)
**j = k

[alt]
capslock = layer(target)

[target]
#w = A-w
b = A-j
